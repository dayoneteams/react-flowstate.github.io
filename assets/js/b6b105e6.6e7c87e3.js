"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[330],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>s});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),k=p(a),m=r,s=k["".concat(d,".").concat(m)]||k[m]||u[m]||l;return a?n.createElement(s,i(i({ref:t},c),{},{components:a})):n.createElement(s,i({ref:t},c))}));function s(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[k]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5658:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={id:"data-layout",title:"<DataLayout />",sidebar_position:1,sidebar_label:"<DataLayout />"},i=void 0,o={unversionedId:"api-reference/data-layout",id:"api-reference/data-layout",title:"<DataLayout />",description:"The DataLayout is the main component responsible for managing your data fetching, loading status and error handling lifecycle.",source:"@site/docs/api-reference/data-layout.md",sourceDirName:"api-reference",slug:"/api-reference/data-layout",permalink:"/docs/api-reference/data-layout",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api-reference/data-layout.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"data-layout",title:"<DataLayout />",sidebar_position:1,sidebar_label:"<DataLayout />"},sidebar:"tutorialSidebar",previous:{title:"Get Started",permalink:"/docs/get-started"},next:{title:"Examples",permalink:"/docs/category/examples"}},d={},p=[{value:"Example",id:"example",level:2},{value:"Props",id:"props",level:2},{value:"<code>initialData</code>",id:"initialdata",level:3},{value:"<code>children</code>",id:"children",level:3},{value:"<code>dataSource</code>",id:"datasource",level:3},{value:"<code>dependencies</code>",id:"dependencies",level:3},{value:"<code>debounceDelay</code>",id:"debouncedelay",level:3},{value:"<code>loadingIndicator</code>",id:"loadingindicator",level:3},{value:"<code>shadowReload</code>",id:"shadowreload",level:3},{value:"<code>preserveDataOnError</code>",id:"preservedataonerror",level:3},{value:"<code>onError</code>",id:"onerror",level:3},{value:"<code>errorFallback</code>",id:"errorfallback",level:3},{value:"<code>dataFallback</code>",id:"datafallback",level:3},{value:"Type Definitions",id:"type-definitions",level:2},{value:"DataFallback",id:"datafallback-1",level:3},{value:"ErrorFallback",id:"errorfallback-1",level:3}],c={toc:p},k="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(k,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"DataLayout")," is the main component responsible for managing your data fetching, loading status and error handling lifecycle."),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="App.jsx"',title:'"App.jsx"'},"import {DataLayout} from 'react-flowstate';\n\nconst fetchData = () => Math.random();\n\nexport default function App() {\n  return (\n    <DataLayout\n      dataSource={fetchData}\n      loadingIndicator={<div>Loading ...</div>}\n      errorFallback={(err) => <div>{err.message}</div>}\n    >\n      {({data}) => <div>Your data is here: {data}</div>}\n    </DataLayout>\n  );\n}\n")),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)("h3",{id:"initialdata"},(0,r.kt)("inlineCode",{parentName:"h3"},"initialData")),(0,r.kt)("p",null,"Supply this value will set initial data."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"initialData")," is set, initial data fetching will be skipped."),(0,r.kt)("li",{parentName:"ul"},"Otherwise, initial data fetching will triggered.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Data")))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"children"},(0,r.kt)("inlineCode",{parentName:"h3"},"children")),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"Please read ",(0,r.kt)("strong",{parentName:"p"},"carefully"),".")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("a",{parentName:"li",href:"#datafallback"},(0,r.kt)("code",null,"dataFallback"))," prop is ",(0,r.kt)("strong",{parentName:"li"},"not supplied"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"children")," will act as ",(0,r.kt)("a",{parentName:"li",href:"#datafallback-1"},(0,r.kt)("code",null,"DataFallback")),"."),(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("a",{parentName:"li",href:"#datafallback"},(0,r.kt)("code",null,"dataFallback"))," and ",(0,r.kt)("inlineCode",{parentName:"li"},"children")," props are both ",(0,r.kt)("strong",{parentName:"li"},"supplied"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"children")," will act as ",(0,r.kt)("inlineCode",{parentName:"li"},"AutoFallback"),".")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#data-fallback"},"DataFallback")," ","|"," AutoFallback")))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"datasource"},(0,r.kt)("inlineCode",{parentName:"h3"},"dataSource")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"(deps?: DependencyList) => Promise<Data>\n")),(0,r.kt)("p",null,"Query function that fetches data and return a ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),".\nIf ",(0,r.kt)("a",{parentName:"p",href:"#dependencies"},(0,r.kt)("code",null,"dependencies"))," prop is supplied, ",(0,r.kt)("inlineCode",{parentName:"p"},"dataSource")," will be refetched and trigger reload behavior."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"function")))),(0,r.kt)("h3",{id:"dependencies"},(0,r.kt)("inlineCode",{parentName:"h3"},"dependencies")),(0,r.kt)("p",null,"If present, data will be reloaded if the values in the list change."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Should be used together with ",(0,r.kt)("a",{parentName:"p",href:"#debouncedelay"},(0,r.kt)("code",null,"debounceDelay"))," prop to avoid performance issue.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"React.DependencyList")))),(0,r.kt)("h3",{id:"debouncedelay"},(0,r.kt)("inlineCode",{parentName:"h3"},"debounceDelay")),(0,r.kt)("p",null,"The number of milliseconds to delay invoking ",(0,r.kt)("inlineCode",{parentName:"p"},"dataSource")," reload behavior.\nIf not present, any changes to ",(0,r.kt)("inlineCode",{parentName:"p"},"dependendcies")," prop will trigger reload\nbehavior\nand may affect the performance."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"number")))),(0,r.kt)("h3",{id:"loadingindicator"},(0,r.kt)("inlineCode",{parentName:"h3"},"loadingIndicator")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"React.ReactNode | (() => React.ReactNode)\n")),(0,r.kt)("p",null,"Render loading UI."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"React.ReactNode ","|"," function")))),(0,r.kt)("h3",{id:"shadowreload"},(0,r.kt)("inlineCode",{parentName:"h3"},"shadowReload")),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"shadowReload")," is true, the reload behavior will keep current displayed\ndata\nUI as-is and not showing loading indicator.\nHowever, if there is no existing data being display, loading indicator is\nstill\nshown."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))))),(0,r.kt)("h3",{id:"preservedataonerror"},(0,r.kt)("inlineCode",{parentName:"h3"},"preserveDataOnError")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"preserveDataOnError")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," and query function failed to fetch new\ndata, current existing data will be set to be ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"errorFallback")," will\nbe displayed."),(0,r.kt)("li",{parentName:"ul"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"preserveDataOnError")," to be ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," preserve existing data even if the\nquery failed. Can be use together with ",(0,r.kt)("inlineCode",{parentName:"li"},"onError")," prop to show the error\nmessage to user (e.g: using ",(0,r.kt)("inlineCode",{parentName:"li"},"toarst")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"alert()"),").")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false"))))),(0,r.kt)("h3",{id:"onerror"},(0,r.kt)("inlineCode",{parentName:"h3"},"onError")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"(err: Error, props: DataLayoutProps<Data>) => unknown\n")),(0,r.kt)("p",null,"Callback function invoked when ",(0,r.kt)("inlineCode",{parentName:"p"},"dataSource")," fails to fetch data."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"function")))),(0,r.kt)("h3",{id:"errorfallback"},(0,r.kt)("inlineCode",{parentName:"h3"},"errorFallback")),(0,r.kt)("p",null,"Render error UI."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#errorfallback-1"},"ErrorFallback"))))),(0,r.kt)("h3",{id:"datafallback"},(0,r.kt)("inlineCode",{parentName:"h3"},"dataFallback")),(0,r.kt)("p",null,"Render data UI."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#datafallback-1"},"DataFallback"))))),(0,r.kt)("h2",{id:"type-definitions"},"Type Definitions"),(0,r.kt)("h3",{id:"datafallback-1"},"DataFallback"),(0,r.kt)("p",null,"Used for rendering data content."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"React.ReactNode ","|"," (props: DataLayoutProps<Data",">",") => React.ReactNode")))),(0,r.kt)("h3",{id:"errorfallback-1"},"ErrorFallback"),(0,r.kt)("p",null,"Used for rendering data content."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"React.ReactNode ","|"," (err: Error, props: DataLayoutProps<Data",">",") => React.ReactNode")))))}u.isMDXComponent=!0}}]);